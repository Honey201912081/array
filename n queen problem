/*
Example:
Input
2
1
4
Output:
[1 ]
[2 4 1 3 ] [3 1 4 2 ]


*/


#include<iostream>

using namespace std;
int b[10][10];
void printsol(int b[10][10], int n) {
	cout << "[";
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (b[j][i] == 1)
				cout << j + 1 << " ";
		}
	}
	cout << "] ";
}
bool isSafe(int b[10][10], int row, int col, int n) {
	//left
	for (int i = 0; i < col; i++) {
		if (b[row][i] == 1)
			return false;
	}

	//diagnoly top left
	int i = row, j = col;
	while (i >= 0 && j >= 0) {
		if (b[i][j] == 1)
			return false;
		i--;
		j--;
	}
	
	//diagnoly top left
	i = row, j = col;
	while (i < n && j >= 0) {
		if (b[i][j] == 1)
			return false;
		i++;
		j--;
	}
	return true;
}
bool solve(int b[10][10], int col, int n) {
	if (col == n) {
		printsol(b, n);
		return true;
	}
	bool res = false;
	for (int i = 0; i < n; i++) {

		if (isSafe(b, i, col, n)) {
			b[i][col] = 1;
			res = solve(b, col + 1, n) || res;
			b[i][col] = 0;
		}
	}
	return res;
}
void solvenq(int n) {
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {                                                                    
			b[i][j] = 0;
		}
	}
	if (solve(b, 0, n) == false)
		cout << "-1";
	return;
}
int main() 
{
	int t; 
	cin >> t;
	while (t--)
	{
		int n; cin >> n;
		solvenq(n);
		cout << endl;
	}
	return 0;
}
